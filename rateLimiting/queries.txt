 mongosh
Current Mongosh Log ID: 688d9faa0308a324c7eec4a8
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.6
Using MongoDB:          8.0.12
Using Mongosh:          2.5.6

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-08-02T10:30:35.334+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> show dbs
admin    40.00 KiB
config  108.00 KiB
local    40.00 KiB
test> use example
switched to db example
example> example.collections
ReferenceError: example is not defined
example> show dbs
admin    40.00 KiB
config  108.00 KiB
local    40.00 KiB
example> db
example
example> db.users.insertOne({"name":"mahesh"})
{
  acknowledged: true,
  insertedId: ObjectId('688da0280308a324c7eec4a9')
}
example> db
example
example> db.find()
TypeError: db.find is not a function
example> db.users.find()
[ { _id: ObjectId('688da0280308a324c7eec4a9'), name: 'mahesh' } ]
example> db.orders.insertMany(
...                                                                                                                                                                        
example> db
example
example> db.orders.find()
[
  {
    _id: ObjectId('688da1ddcdd7439603f925c7'),
    order_id: 1,
    customer_name: 'John Doe',
    items: [ 'Laptop', 'Mouse' ],
    total_amount: 65000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c8'),
    order_id: 2,
    customer_name: 'Jane Smith',
    items: [ 'Headphones', 'Charger' ],
    total_amount: 3000,
    order_status: 'shipped'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c9'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925ca'),
    order_id: 4,
    customer_name: 'Bob Brown',
    items: [ 'Tablet', 'Keyboard' ],
    total_amount: 15000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925cb'),
    order_id: 5,
    customer_name: 'Chris Green',
    items: [ 'Smartwatch' ],
    total_amount: 7000,
    order_status: 'shipped'
  }
]
example> show collections
orders
users
example> db.orders.find({"order_status":"shipped"})
[
  {
    _id: ObjectId('688da1ddcdd7439603f925c8'),
    order_id: 2,
    customer_name: 'Jane Smith',
    items: [ 'Headphones', 'Charger' ],
    total_amount: 3000,
    order_status: 'shipped'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925cb'),
    order_id: 5,
    customer_name: 'Chris Green',
    items: [ 'Smartwatch' ],
    total_amount: 7000,
    order_status: 'shipped'
  }
]
example> db.orders.updateOne({"order_id":1},{$set:{"total_amount":70000}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
example> db.orders.find()
[
  {
    _id: ObjectId('688da1ddcdd7439603f925c7'),
    order_id: 1,
    customer_name: 'John Doe',
    items: [ 'Laptop', 'Mouse' ],
    total_amount: 70000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c8'),
    order_id: 2,
    customer_name: 'Jane Smith',
    items: [ 'Headphones', 'Charger' ],
    total_amount: 3000,
    order_status: 'shipped'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c9'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925ca'),
    order_id: 4,
    customer_name: 'Bob Brown',
    items: [ 'Tablet', 'Keyboard' ],
    total_amount: 15000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925cb'),
    order_id: 5,
    customer_name: 'Chris Green',
    items: [ 'Smartwatch' ],
    total_amount: 7000,
    order_status: 'shipped'
  }
]
example> db.orders.deleteOne({order_id:4})
{ acknowledged: true, deletedCount: 1 }
example> db.orders.find()
[
  {
    _id: ObjectId('688da1ddcdd7439603f925c7'),
    order_id: 1,
    customer_name: 'John Doe',
    items: [ 'Laptop', 'Mouse' ],
    total_amount: 70000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c8'),
    order_id: 2,
    customer_name: 'Jane Smith',
    items: [ 'Headphones', 'Charger' ],
    total_amount: 3000,
    order_status: 'shipped'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c9'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925cb'),
    order_id: 5,
    customer_name: 'Chris Green',
    items: [ 'Smartwatch' ],
    total_amount: 7000,
    order_status: 'shipped'
  }
]
example> db.orders.find({customer_name:"Alice Johnson"})
[
  {
    _id: ObjectId('688da1ddcdd7439603f925c9'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  }
]
example> db.orders.updateOne({order_id:2},{$set:{order_status:"delivered"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
example> db.orders.find()
[
  {
    _id: ObjectId('688da1ddcdd7439603f925c7'),
    order_id: 1,
    customer_name: 'John Doe',
    items: [ 'Laptop', 'Mouse' ],
    total_amount: 70000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c8'),
    order_id: 2,
    customer_name: 'Jane Smith',
    items: [ 'Headphones', 'Charger' ],
    total_amount: 3000,
    order_status: 'delivered'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c9'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925cb'),
    order_id: 5,
    customer_name: 'Chris Green',
    items: [ 'Smartwatch' ],
    total_amount: 7000,
    order_status: 'shipped'
  }
]
example> db.orders.find({total_amount:>=5000})
Uncaught:
SyntaxError: Unexpected token (1:29)

> 1 | db.orders.find({total_amount:>=5000})
    |                              ^
  2 |

example> db.orders.find({total_amount:{$gte:5000})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:40)

> 1 | db.orders.find({total_amount:{$gte:5000})
    |                                         ^
  2 |

example> db.orders.find({total_amount:{$gte:5000}})
[
  {
    _id: ObjectId('688da1ddcdd7439603f925c7'),
    order_id: 1,
    customer_name: 'John Doe',
    items: [ 'Laptop', 'Mouse' ],
    total_amount: 70000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c9'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925cb'),
    order_id: 5,
    customer_name: 'Chris Green',
    items: [ 'Smartwatch' ],
    total_amount: 7000,
    order_status: 'shipped'
  }
]
example> db.orders.find({total_amount:{$gte:15000}})
[
  {
    _id: ObjectId('688da1ddcdd7439603f925c7'),
    order_id: 1,
    customer_name: 'John Doe',
    items: [ 'Laptop', 'Mouse' ],
    total_amount: 70000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('688da1ddcdd7439603f925c9'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  }
]
example>